const webpack = require('webpack'); //to access built-in plugins
const UglifyJsPlugin = require('uglifyjs-webpack-plugin');
const CompressionPlugin = require('compression-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin')
const path = require('path')

function OZTreeModule_src(x) {
    return path.resolve(__dirname, 'OZprivate', 'rawJS', 'OZTreeModule', 'src', x);
}

var config = {
  performance: {
    // See https://github.com/OneZoom/OZtree/issues/246
    maxEntrypointSize: 350000,
    maxAssetSize: 350000 
  },
  stats: {
    children: false
  },
  entry: {
    //at: './OZprivate/rawJS/OZTreeModule/src/at.js',
    OZentry: OZTreeModule_src('OZentry.js'),
    search_ui: OZTreeModule_src('search_ui.js'),
  },
  optimization: {
    minimizer: [new UglifyJsPlugin()],
  },
  output: {
    filename: '[name].[hash].js',
    path: path.resolve(__dirname, 'OZprivate', 'rawJS', 'OZTreeModule', 'dist'),
    //publicPath affects the script address in OZ_script.html generated by html webpack plugin
    publicPath: '/static/OZTreeModule/dist/',
    library: '[name]'
  },
  externals: {
    'jquery': 'jQuery'
  },
  module: {
    rules: [
      {
        test: /\.js/,
        exclude: /(node_modules|bower_components)/,
        loader: 'babel-loader'
      }
    ]
  },
  plugins: [
    new webpack.DefinePlugin({
      'process.env': {
        'NODE_ENV': JSON.stringify(process.env.NODE_ENV)
      }
    }),
    new HtmlWebpackPlugin({
      filename: 'OZ_script.html',
      //This template only include script tags refering to the js files generated by webpack compile command
      template: './OZ_script_template.html',
      inject: false
    }),
    new CompressionPlugin(
    )
  ]
}

if (process.env.NODE_ENV === 'production') {
  //production mode. do nothing here
  config.mode = 'production'
} else {
  config.mode = 'development'
  //development mode.
  config.devtool = 'inline-source-map'; // this keeps the line numbers constant for debugging - it should be commented out for release versions of the code.
}

module.exports = config;
